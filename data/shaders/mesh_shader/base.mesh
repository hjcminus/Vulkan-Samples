#version 450
#extension GL_EXT_mesh_shader : require

layout (binding = 0) uniform BufferMat {
    mat4 mvp;
} buffer_mat;

layout(binding = 1) buffer Vertices {
    vec4 v[];
} vertices;

layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
layout (triangles, max_vertices = 3, max_primitives = 1) out;

layout (location = 0) out VertexOutput {
	vec4 color;
} vertex_output[];

void main() {
    // SetMeshOutputsEXT(uint vertexCount, uint primitiveCount);
    SetMeshOutputsEXT(3, 1);

	gl_MeshVerticesEXT[0].gl_Position = buffer_mat.mvp * vertices.v[0];
	gl_MeshVerticesEXT[1].gl_Position = buffer_mat.mvp * vertices.v[1];
	gl_MeshVerticesEXT[2].gl_Position = buffer_mat.mvp * vertices.v[2];

	vertex_output[0].color = vec4(1.0f, 0.0f, 0.0f, 1.0f);
	vertex_output[1].color = vec4(0.0f, 1.0f, 0.0f, 1.0f);
	vertex_output[2].color = vec4(0.0f, 0.0f, 1.0f, 1.0f);

	gl_PrimitiveTriangleIndicesEXT[gl_LocalInvocationIndex] = uvec3(0, 1, 2);
}
